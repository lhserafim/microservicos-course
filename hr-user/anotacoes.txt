GITHUB: https://github.com/acenelio/ms-course

Fase 3: Configuração centralizada

1.  Criar o MS hr-user com as dependências JPA, Eureka Client, Web, H2
2.  Configurar o MS
    2.1.    Colocar a anotação de cliente do eureka na application @EnableEurekaClient
    2.2.    Configurar o arquivo application.properties, definindo nome do MS, Porta aleatória, end. do servidor eureka,
            configuração do H2
3.  Criar a entidade User, no padrão JPA
    3.1.    IMPORTANTE! A associção entre User e Role é ManyToMany e por isso preciso:
        3.1.1.  Utilizar o Set<> ao invés de List<>
        3.1.2.  Criar a tabela intermediaria que fará a associação entre User e Role
            3.1.2.1.    Esta tabela é criada dinamicamente pela anotação @ManyToMany + @JoinTable
                        Ex.:
                        @JoinTable(name = "tb_user_role", // nome da tabela
                            joinColumns = @JoinColumn(name = "user_id"), // nome da coluna que é FK da tabela TB_USER
                            inverseJoinColumns = @JoinColumn(name = "role_id") )// nome da coluna que é FK da tabela TB_ROLE
            3.1.2.2.    Colocar o fetch como EAGER
4.  Criar o arquivo data.sql e fazer a carga (seeding) dos usuários e privilégios
5.  Criar o repository UserRepository com o query method
6.  Criar o resource, com os endpoints p/ findById e findByEmail
    6.1.    DICA! Note que estou usando o @RequestParam, pois ele é opcional na URL (e não aparece na URL)
7.  Configurar o Zuul para rodar o meu projeto MS hr-user através do Zuul
    7.1.    Abrir o projeto do Zuul e configurar a rota p/ hr-user
            Ex.:
            zuul.routes.user.service-id=hr-user
            zuul.routes.user.path=/hr-user/**