GITHUB: https://github.com/acenelio/ms-course

Fase 2: Eureka, Hystrix, Zuul

1.  Configurando o gateway Zuul
    1.1.    Criar o projeto do Zuul adicionando as dependências de Web, Eureka Client e Zuul
    1.2.    Adicionar as anotações no Application: @EnableEurekaClient e @EnableZuulProxy
    1.3.    Configurar a conexão com o Eureka no arquivo application.properties definindo: O nome da aplicação,
            a porta, o endereço do servidor eureka, e as rotas dos microserviços.
            Vide arquivo para exemplo.
        1.3.1.  As definições das rotas: service-id e path são essenciais para que eu possa acessar o endpoint do MS
                utilizando o endereço do Zuul.
                Ex.: http://localhost:8765/hr-worker/workers
                     http://localhost:8765/hr-payroll/payments/1/days/10
    1.4.    Com estas implementações, estamos colocando os nossos MS dentro do gateway e assim podemos impedir o acesso
            direto as API's
2.  Zuul timeout
    2.1.    Mesmo o timeout de Hystrix e Ribbon configurado em um microsserviço, se o Zuul não tiver seu timeout
            configurado, para ele será um problema de timeout. Então precisamos configurar o timeout no Zuul.
        2.1.1.  Configurar no arquivo application.properties o timeout do Zuul. As configurações são as mesmas que foram
                definidas no MS hr-payroll
    2.2.    Se o timeout estiver configurado somente em Zuul, o Hystrix vai chamar o método alternativo no microsserviço
            específico. Ou seja, as configurações de timeout precisam estar tanto no Zuul quanto nos MS
3.  Implementando o FeignClient para hr-oauth acessar hr-user
    3.1.    No gateway zuul, em application.properties, definir as rotas para que seja possível acessar o MS através do Zuul
4.  Implementando o JWT
    4.1.    Para que o JWT funcione no Zuul é necessário implentar uma configuração no arquivo application.properties
            Ex.: zuul.routes.oauth.sensitive-headers=Cookie,Set-Cookie
























